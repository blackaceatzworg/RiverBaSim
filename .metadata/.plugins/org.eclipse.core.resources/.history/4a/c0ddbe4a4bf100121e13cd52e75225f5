<HTML><FONT FACE=Arial, Verdana, Sans><TITLE>RiverSection.agent</TITLE><BODY><STYLE TYPE="text/css"><!--.centeralign <BLOCKQUOTE>text-align:center</BLOCKQUOTE>--></STYLE><HEAD><P CLASS="centeralign">RiverSection.agent</P></HEAD>The package name is "bin.riverbasim".</p>
The following external code is referenced:<BLOCKQUOTE></p>
<li>Components from java.io.*</li></p>
<li>Components from java.math.*</li></p>
<li>Components from java.util.*</li></p>
<li>Components from javax.measure.unit.*</li></p>
<li>Components from org.jscience.mathematics.number.*</li></p>
<li>Components from org.jscience.mathematics.vector.*</li></p>
<li>Components from org.jscience.physics.amount.*</li></p>
<li>Components from repast.simphony.adaptation.neural.*</li></p>
<li>Components from repast.simphony.adaptation.regression.*</li></p>
<li>Components from repast.simphony.context.*</li></p>
<li>Components from repast.simphony.context.space.continuous.*</li></p>
<li>Components from repast.simphony.context.space.gis.*</li></p>
<li>Components from repast.simphony.context.space.graph.*</li></p>
<li>Components from repast.simphony.context.space.grid.*</li></p>
<li>Components from repast.simphony.engine.environment.*</li></p>
<li>Components from repast.simphony.engine.schedule.*</li></p>
<li>Components from repast.simphony.engine.watcher.*</li></p>
<li>Components from repast.simphony.groovy.math.*</li></p>
<li>Components from repast.simphony.integration.*</li></p>
<li>Components from repast.simphony.matlab.link.*</li></p>
<li>Components from repast.simphony.query.*</li></p>
<li>Components from repast.simphony.query.space.continuous.*</li></p>
<li>Components from repast.simphony.query.space.gis.*</li></p>
<li>Components from repast.simphony.query.space.graph.*</li></p>
<li>Components from repast.simphony.query.space.grid.*</li></p>
<li>Components from repast.simphony.query.space.projection.*</li></p>
<li>Components from repast.simphony.parameter.*</li></p>
<li>Components from repast.simphony.random.*</li></p>
<li>Components from repast.simphony.space.continuous.*</li></p>
<li>Components from repast.simphony.space.gis.*</li></p>
<li>Components from repast.simphony.space.graph.*</li></p>
<li>Components from repast.simphony.space.grid.*</li></p>
<li>Components from repast.simphony.space.projection.*</li></p>
<li>Components from repast.simphony.ui.probe.*</li></p>
<li>Components from repast.simphony.util.*</li></p>
<li>Components from simphony.util.messages.*</li></p>
<li>Components from static java.lang.Math.*</li></p>
<li>Components from static repast.simphony.essentials.RepastEssentials.*</li></p>
</BLOCKQUOTE><P></p>
The class "RiverSection" is defined with visibility "public" . This is an agent.</p>
 <BLOCKQUOTE></p>
</p>
    <li>There is a field named "amountWater" with visibility "public" of type "riverbasim.WaterFeature" and default value new riverbasim.WaterFeature(GetTickCount(), 5000). Flow (amount) of water The block is tagged with the name "Amount of water in the river section (m3)", converter = "riverbasim.WaterFeatureConverter".</li></p>
</p>
    <li>There is a field named "solidConcentration" with visibility "public" of type "riverbasim.WaterFeature" and default value new riverbasim.WaterFeature(GetTickCount(), 0). Concentration of solids (MES) The block is tagged with the name "Solid concentration (gr/m3)", converter = "riverbasim.WaterFeatureConverter".</li></p>
</p>
    <li>There is a field named "bodConcentration" with visibility "public" of type "riverbasim.WaterFeature" and default value new riverbasim.WaterFeature(GetTickCount(), 0). Concentration of BOD The block is tagged with the name "BOD concentration (gr./m3)", converter = "riverbasim.WaterFeatureConverter".</li></p>
</p>
    <li>There is a field named "codConcentration" with visibility "public" of type "riverbasim.WaterFeature" and default value new riverbasim.WaterFeature(GetTickCount(), 0). Concentration of COD The block is tagged with the name "COD concentration (gr./m3)", converter = "riverbasim.WaterFeatureConverter".</li></p>
</p>
    <li>There is a field named "ntConcentration" with visibility "public" of type "riverbasim.WaterFeature" and default value new riverbasim.WaterFeature(GetTickCount(), 0). Concentration of Nt The block is tagged with the name "Nitrogen Total concentration", converter = "riverbasim.WaterFeatureConverter".</li></p>
</p>
    <li>There is a field named "ptConcentration" with visibility "public" of type "riverbasim.WaterFeature" and default value new riverbasim.WaterFeature(GetTickCount(), 0). Concentration of Phosphorus Total The block is tagged with the name "Phosphorus Total concentration", converter = "riverbasim.WaterFeatureConverter".</li></p>
</p>
    <li>There is a field named "defaultAmountWater" with visibility "public" of type "double" and default value 10000. Default incoming water amount The block is tagged with the name "Default incoming water".</li></p>
</p>
    <li>There is a field named "nom" with visibility "public" of type "String" and default value "". Name of the section The block is tagged with the name "Nom".</li></p>
</p>
    <li>There is a field named "numsub" with visibility "public" of type "int" and default value 0. This is an agent property. The block is tagged with the name "Numsub".</li></p>
</p>
    <li>There is a field named "idtram" with visibility "public" of type "int" and default value 0. This is an agent property. The block is tagged with the name "IDTram".</li></p>
</p>
    <li>There is a field named "watchedAgent" with visibility "public" of type "RiverSection" and default value null. Predecessor block The block is tagged with the name "Predecessor".</li></p>
</p>
    </p>
    </p>
        <li>There is a method named "flowingWater" method has visibility     "public". Flowing water from one section to another The block is tagged with the name "Flowing water riverbasim.RiverSection watchedAgent".</li></p>
    </p>
    </p>
    <BLOCKQUOTE>The flowingWater method is statically scheduled as follows:<BLOCKQUOTE></p>
        <li>start = 1d</li></p>
        <li>interval = 1d</li></p>
        <li>shuffle = false</li></p>
    </BLOCKQUOTE></BLOCKQUOTE></p>
    <BLOCKQUOTE>The flowingWater method will trigger as follows:<BLOCKQUOTE></p>
        <li>watcheeClassName = 'riverbasim.RiverSection'</li></p>
        <li>watcheeFieldNames = 'amountWater, solidConcentration, bodConcentration, codConcentration, ntConcentration, ptConcentration'</li></p>
        <li>query = 'linked_to'</li></p>
        <li>whenToTrigger = WatcherTriggerSchedule.LATER</li></p>
        <li>scheduleTriggerDelta = 3d</li></p>
    </BLOCKQUOTE></BLOCKQUOTE></p>
 <BLOCKQUOTE>The code for the "flowingWater" method is as follows:<BLOCKQUOTE><CODE></p>
</p>
</p>
         Note the simulation time.</p>
        def time = GetTickCountInTimeUnits()</p>
</p>
         End the method.</p>
        return</p>
</p>
    </BLOCKQUOTE></BLOCKQUOTE></CODE></p>
</p>
</p>
</p>
</BLOCKQUOTE></p>
</p>
</BODY></HTML>