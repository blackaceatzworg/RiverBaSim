package riverbasim;

import java.util.HashMap;

import org.jgrapht.graph.Multigraph;

import repast.simphony.context.DefaultContext;
import repast.simphony.context.space.gis.GeographyFactoryFinder;
import repast.simphony.space.gis.Geography;
import repast.simphony.space.gis.GeographyParameters;

public class WaterHolderContext extends DefaultContext<WaterHolder> {
	private Geography<WaterHolder> waterHolderGeography;
	private Multigraph<RiverSection, RiverBlock> graph;
	private HashMap<RiverSection, RiverSection> flow;

	public WaterHolderContext()
	{
		super("WaterHolderContext"); // Very important otherwise repast complains

		System.out.println("WaterHolderContext: Building WaterHolder context");
		/* Create a Geography to store junctions in spatially */
		GeographyParameters<WaterHolder> geoParams = new GeographyParameters<WaterHolder>();
		waterHolderGeography = GeographyFactoryFinder
				.createGeographyFactory(null).createGeography("WaterHolderGeography",
						this, geoParams);
		System.out.println("Created WaterHolderGeography");
	}

	public void createSubContexts()
	{
		RiverContext rc = new RiverContext();
		this.addSubContext(rc);
		WaterPlantContext wpc = new WaterPlantContext(rc.getWaterPlants());
		this.addSubContext(wpc);
		it = rc.getObjects(RiverSection.class);
		this.addAll();
		this.addAll(c)
	}
}
