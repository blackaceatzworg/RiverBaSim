<HTML><FONT FACE=Arial, Verdana, Sans><TITLE>WaterPlant.agent</TITLE><BODY><STYLE TYPE="text/css"><!--.centeralign <BLOCKQUOTE>text-align:center</BLOCKQUOTE>--></STYLE><HEAD><P CLASS="centeralign">WaterPlant.agent</P></HEAD><IMG SRC=images/riverbasim.WaterPlant.png border=1 alt="Flowchart for WaterPlant.agent" title="Flowchart for WaterPlant.agent"></P>The package name is "riverbasim".</p>
The following external code is referenced:<BLOCKQUOTE></p>
<li>Components from java.io.*</li></p>
<li>Components from java.math.*</li></p>
<li>Components from java.util.*</li></p>
<li>Components from javax.measure.unit.*</li></p>
<li>Components from org.jscience.mathematics.number.*</li></p>
<li>Components from org.jscience.mathematics.vector.*</li></p>
<li>Components from org.jscience.physics.amount.*</li></p>
<li>Components from repast.simphony.adaptation.neural.*</li></p>
<li>Components from repast.simphony.adaptation.regression.*</li></p>
<li>Components from repast.simphony.context.*</li></p>
<li>Components from repast.simphony.context.space.continuous.*</li></p>
<li>Components from repast.simphony.context.space.gis.*</li></p>
<li>Components from repast.simphony.context.space.graph.*</li></p>
<li>Components from repast.simphony.context.space.grid.*</li></p>
<li>Components from repast.simphony.engine.environment.*</li></p>
<li>Components from repast.simphony.engine.schedule.*</li></p>
<li>Components from repast.simphony.engine.watcher.*</li></p>
<li>Components from repast.simphony.groovy.math.*</li></p>
<li>Components from repast.simphony.integration.*</li></p>
<li>Components from repast.simphony.matlab.link.*</li></p>
<li>Components from repast.simphony.query.*</li></p>
<li>Components from repast.simphony.query.space.continuous.*</li></p>
<li>Components from repast.simphony.query.space.gis.*</li></p>
<li>Components from repast.simphony.query.space.graph.*</li></p>
<li>Components from repast.simphony.query.space.grid.*</li></p>
<li>Components from repast.simphony.query.space.projection.*</li></p>
<li>Components from repast.simphony.parameter.*</li></p>
<li>Components from repast.simphony.random.*</li></p>
<li>Components from repast.simphony.space.continuous.*</li></p>
<li>Components from repast.simphony.space.gis.*</li></p>
<li>Components from repast.simphony.space.graph.*</li></p>
<li>Components from repast.simphony.space.grid.*</li></p>
<li>Components from repast.simphony.space.projection.*</li></p>
<li>Components from repast.simphony.ui.probe.*</li></p>
<li>Components from repast.simphony.util.*</li></p>
<li>Components from simphony.util.messages.*</li></p>
<li>Components from static java.lang.Math.*</li></p>
<li>Components from static repast.simphony.essentials.RepastEssentials.*</li></p>
</BLOCKQUOTE><P></p>
The class "WaterPlant" is defined with visibility "public" . This is an agent.</p>
 <BLOCKQUOTE></p>
</p>
    <li>There is a field named "raining" with visibility "public" of type "def" and default value 0. This property tells if it is raining. The block is tagged with the name "Is it raining?".</li></p>
</p>
    <li>There is a field named "riverSectionLocation" with visibility "public" of type "def" and default value 0. River section where the WWTP dumps treated water. The block is tagged with the name "River section location".</li></p>
</p>
    </p>
    </p>
        <li>There is a method named "step" method has visibility     "public" has return type "def". Treating wastewater The block is tagged with the name "Wastewater treatement".</li></p>
    </p>
    </p>
 <BLOCKQUOTE>The code for the "step" method is as follows:<BLOCKQUOTE><CODE></p>
</p>
</p>
         Define the return value variable.</p>
        def returnValue</p>
</p>
         Note the simulation time.</p>
        def time = GetTickCountInTimeUnits()</p>
</p>
</p>
         The Water Plant has to decide if it cleans a certain amount of wastewater or not.</p>
        if (cleaningWastewaterFeasible()) <BLOCKQUOTE></p>
</p>
             Cleans N units of wastewater</p>
            callSomething();</p>
             Send the treated water to be dumped to the river.</p>
</p>
        </BLOCKQUOTE> else  <BLOCKQUOTE></p>
</p>
             Send the cleaned water to the Water Transporter agent to be dumped to the river.</p>
</p>
        </BLOCKQUOTE></p>
         Return the results.</p>
        return returnValue</p>
</p>
    </BLOCKQUOTE></BLOCKQUOTE></CODE></p>
</p>
</p>
</p>
</BLOCKQUOTE></p>
</p>
</BODY></HTML>