package riverbasim;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map.Entry;

import org.jgrapht.Graph;
import org.jgrapht.graph.Multigraph;

import repast.simphony.context.DefaultContext;
import repast.simphony.context.space.gis.GeographyFactoryFinder;
import repast.simphony.space.gis.Geography;
import repast.simphony.space.gis.GeographyParameters;

public class RiverBaSimContext extends DefaultContext<Object> {
	private HashSet<RiverSection> setBesos;
	HashMap<RiverSection,RiverSection> flow = null;

	private Graph<RiverSection,RiverBlock>	graph;
	
	/**
	 * Constructs a CityContextContext and creates a Geography (called
	 * RoadNetworkGeography) which is part of this context.
	 */
	public RiverBaSimContext()
	{
		super("RiverBaSimContext"); // Very important otherwise repast complains

		System.out.println("RiverBaSimContext: Building RiverBaSim context");

		/* Create a geography to display the sub-contexts of the city. */
		GeographyParameters<Object> geoParams = new GeographyParameters<Object>();
		GeographyFactoryFinder.createGeographyFactory(null).createGeography(
				"RiverBaSimGeography", this, geoParams);
	}

	public void createSubContexts()
	{
		this.addSubContext(new WaterHolderContext());
		this.addSubContext(new FlowContext());
		
		buildRiverFlow();
	}	
}
